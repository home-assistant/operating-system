name: Test HAOS image
run-name: "Test HAOS ${{ inputs.version || format('(OS build #{0})', github.event.workflow_run.run_number) }}"

on:
  # Manual test of specified version
  workflow_dispatch:
    inputs:
      version:
        description: Version of HAOS to test
        required: true
        type: string

  # Called by other workflows (e.g. build.yaml)
  workflow_call:
    inputs:
      use-artifact:
        # Workaround for GH weirdness: https://github.com/actions/runner/discussions/1884
        description: Download OS image using actions/download-artifact
        required: false
        type: boolean
        default: true
      version:
        description: Version of HAOS to test (as used in the name of the qcow2 image artifact)
        required: true
        type: string

jobs:
  test:
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}

    name: Test in QEMU
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y qemu-system-x86 ovmf

      - name: Setup Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: 3.12

      - name: Install Python requirements
        run:
          pip install -r tests/requirements.txt

      - name: Download HAOS image
        if: ${{ !inputs.use-artifact }}
        run: |
          curl -sfL -o haos.qcow2.xz  https://os-artifacts.home-assistant.io/${{github.event.inputs.version}}/haos_ova-${{github.event.inputs.version}}.qcow2.xz

      - name: Get OS image artifact
        if: ${{ inputs.use-artifact }}
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: haos_ova-${{ inputs.version }}.qcow2.xz

      - name: Extract OS image
        run: |
          xz -dc haos*.qcow2.xz > tests/haos.qcow2
          rm haos*.qcow2.xz

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run tests
        run: |
          ./tests/run_tests.sh --durations=0 --durations-min=5.0

      - name: Archive logs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: logs
          path: |
            tests/lg_logs/**

      - name: Archive JUnit reports
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: junit_reports
          path: |
            tests/junit_reports/*.xml

      - name: Publish test report
        uses: mikepenz/action-junit-report@3585e9575db828022551b4231f165eb59a0e74e3 # v5.6.2
        if: always()
        with:
          report_paths: 'tests/junit_reports/*.xml'
          annotate_only: true
          detailed_summary: true
